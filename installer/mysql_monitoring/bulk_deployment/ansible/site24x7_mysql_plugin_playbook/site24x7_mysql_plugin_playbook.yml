---
 - name: "Site24x7 MySQL Plugin Installation"
   hosts: all
   become: yes
   vars:
      host: localhost
      port: 3306
      username: "site24x7"
      password: "site24x7" 
      logs_enabled: true
      log_type_name: '"Mysql General Logs"'
      log_file_path: '"/var/log/mysql/error.log"'


  
   tasks:    
  # Site24x7 MySQL Prerequisites Check

   - name: "Python3 Installation Check."
     command: "python3 --version"
     register: python_version_output
     ignore_errors: yes

   - name: "Installing Python if not found (for Debian/Ubuntu)."
     apt:
        name: python3
        state: present
     when: "not python_version_output.stdout and ansible_facts['os_family'] == 'Debian'"

   - name: "Installing Python if not found (for CentOS/RedHat)."
     yum:
        name: python3
        state: present
     when: "not python_version_output.stdout and ansible_facts['os_family'] == 'RedHat'"

   - name: "pip3 Installation Check."
     command: "pip3 --version"
     register: pip_version_output
     ignore_errors: yes


   - name: "Installing pip3 if not found (for Debian/Ubuntu)."
     apt:
        name: python3-pip
        state: present
     when: "not pip_version_output.stdout and ansible_facts['os_family'] == 'Debian'"


   - name: "Installing pip3 if not found (for RedHat/CentOS)."
     yum:
        name: python3-pip
        state: present
     when: "not pip_version_output.stdout and ansible_facts['os_family'] == 'RedHat'"

      
   - name: "Installing pymysql Python3 Package."
     pip:
        name: pymysql
        state: present
        executable: pip3
     ignore_errors: yes


   - name: pymysql check
     shell: 'python3 -c "import pymysql"'
     register: pymysql_status
     ignore_errors: yes

   - set_fact: 
      pymysql_stats: "{{pymysql_status.rc}}"


   - name: "Site24x7 Agent Directory Check."
     stat:
      path: "/opt/site24x7/monagent/temp"
     register: agent_path_check

   - name: "Hosts with no Site24x7 Agent Directory"
     debug:
      msg: "Agent Directory not found"
     when: not agent_path_check.stat.exists


   - name: "Site24x7 Temp Plugins Directory Creation."
     file:
      path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring"
      state: directory
     when: agent_path_check.stat.exists

   - name: "Site24x7 Plugin Directory Check"
     stat:
      path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring"
     register: plugin_path_check

   - name: "Download the Site24x7 pymysql library"
     get_url:
        url: "https://github.com/site24x7/plugins/raw/master/mysql_monitoring/pymysql/pymysql.zip"
        dest: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring"
        mode: 0744
     when: plugin_path_check.stat.exists and pymysql_stats !=0

   - name: "MySQL pymysql module check"
     stat:
      path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring/pymysql.zip"
     register: pymysql_path_check

   - name: "unzip the module"
     unarchive:
        src: /opt/site24x7/monagent/temp/plugins/mysql_monitoring/pymysql.zip   # Path to your archive file
        dest: /opt/site24x7/monagent/temp/plugins/mysql_monitoring      # Destination directory where the content will be extracted
        remote_src: yes 
     when: pymysql_path_check.stat.exists and pymysql_stats!=0

   - name: "Download the Site24x7 MySQL Plugin Files."
     get_url:
        url: "{{ item }}"
        dest: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring"
        mode: 0744
     loop: ["https://raw.githubusercontent.com/site24x7/plugins/master/mysql_monitoring/mysql_monitoring.py","https://raw.githubusercontent.com/site24x7/plugins/master/mysql_monitoring/mysql_monitoring.cfg"]
     when: plugin_path_check.stat.exists and (pymysql_path_check.stat.exists or pymysql_stats ==0)
    

  # Site24x7 MySQL Plugin Config File Setup

   - name: "Site24x7 MySQL Config File Check."
     stat:
      path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring/mysql_monitoring.cfg"
     register: mysql_file_check

   - name: "Site24x7 My conSQLfiguration."
     lineinfile: 
       path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring/mysql_monitoring.cfg"
       regexp: "{{ item.regex }}"
       line: "{{ item.line }}"
     loop:
       - { regex: 'host =', line: 'host ={{host}}' }
       - { regex: 'port =', line: 'port ={{port}}' }
       - { regex: 'username =', line: 'username ={{username}}' }
       - { regex: '^password =', line: 'password ={{password}}' }
       - { regex: 'logs_enabled=', line: 'logs_enabled ={{logs_enabled}}' }
       - { regex: 'log_type_name=', line: 'log_type_name ={{log_type_name}}' }
       - { regex: 'log_file_path=', line: 'log_file_path ={{log_file_path}}' }
     when: mysql_file_check.stat.exists


  # Site24x7 MySQL Python File Setup

   - name: "Site24x7 MySQL Python File Check."
     stat:
      path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring/mysql_monitoring.py"
     register: mysql_python_file_check

   - name: "Extracting Python3 Default Path."
     command: which python3
     register: python3_path

   - set_fact:
      actual_path: "{{ '#!'+python3_path.stdout }}"

   - name: "Setting the Default Python Path for the Site24x7 MySQL Plugin"
     lineinfile:
       path: "/opt/site24x7/monagent/temp/plugins/mysql_monitoring/mysql_monitoring.py"
       regexp: "#!"
       line: "{{actual_path}}"
     when: mysql_python_file_check.stat.exists

   - name: "Checking the Site24x7 MySQL Plugin Output"
     shell: "python3 /opt/site24x7/monagent/temp/plugins/mysql_monitoring/mysql_monitoring.py --host={{host}} --port={{port}} --username={{username}} --password={{password}}"
     register: mysql_python_output
     when: mysql_python_file_check.stat.exists

   - name: "Site24x7 MySQL plugins with Error !"
     debug:
      msg: "Site24x7 MySQL Plugin OUTPUT error ! \n {{ mysql_python_output.stdout }}"
     when: "'\"status\": 0' in mysql_python_output.stdout and mysql_python_file_check.stat.exists"

   - name: "Moving the Site24x7 MySQL Folder to the Plugins Directory"
     command: "mv  /opt/site24x7/monagent/temp/plugins/mysql_monitoring /opt/site24x7/monagent/plugins"
     ignore_errors: true
     when: "plugin_path_check.stat.exists and '\"status\": 0' not in mysql_python_output.stdout"

